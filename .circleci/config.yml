version: 2.1

commands:
   print_pipeline_id:
    description: "Just Testing Command"
    parameters:
      to:
        type: string
        default: "Hello This is my circle ci"
    steps:
      - run: echo  "Hello, This is my circle ci id <<parameters.to>>"

jobs:
  configure_infastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["b2:1e:84:aa:f1:b6:9e:44:25:ff:90:09:1f:16:ea:a1"] 
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt npm-main.yml

  cicd_workflow:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: "echo Hello printing CircleCI Workflow"
      - run: 
          name: "PROJECT ENVIRONMENT VARIABLE ID"
          command: echo $TEST_ENV_VAR
      - run:
          name: "CIRCLE BRANCH"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: "CIRCLE CI WORKFLOW ID"
          command: echo ${CIRCLE_WORKFLOW_ID}
      - print_pipeline_id:
          to: ${CIRCLE_WORKFLOW_ID}

  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: "echo persisting file to disk"
  #     - run:
  #         name: "Creating directory to persist to"
  #         command: "echo creating a direcotry"
  #     - run: 
  #         name: "Persist to workspace"
  #         command: echo "text to output here" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt
  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Attach to workspace"
  #         command: echo "Attaching to workspace"
  #     - attach_workspace:
  #         at: ~/
  #     - run: cat ~/output.txt
  create_infastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
  # build:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: npm i
  #     - run: echo "Hello, building project"
  #     - run:
  #         name: "Building project"
  #         command: npm run lint

  # test:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: npm i
  #     - run: echo "Hello, testing project"
  #     - run:
  #         name: "Testing project"
  #         command: npm run test

  # analyze:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: echo "Hello, first analyze"
  #     - run:
  #         name: "Building project"
  #         command: npm audit
  #     - run:
  #         name: on error
  #         command: echo "Hello, Error occured when analyzing"
  #         when: on_fail

workflows: 
  first_pipeline_workflow:
    jobs:
      - cicd_workflow
      - create_infastructure
      # - save_hello_world_output
      # - print_output_file:
      #     requires: 
      #       - save_hello_world_output
      # - test:
      #     requires:
      #       - build
      # - analyze:
      #     requires:
      #       - test 





